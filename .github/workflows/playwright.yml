name: Playwright Tests

on:
  push:
    branches: [main, master, e2e-workout]
  pull_request:
    branches: [main, master, e2e-workout]

jobs:
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      NODE_OPTIONS: --max_old_space_size=4096
      PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENT: 1
      PLAYWRIGHT_WORKERS: 2

    steps:
      - name: ðŸ“¥ Checkout Repository
        uses: actions/checkout@v4

      - name: ðŸ”§ Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: ðŸ“¦ Install Dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci

      - name: ðŸ“„ Create .env file for Backend
        run: |
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" > backend/.env
          echo "DATABASE_URL=file:./db/holos.db" >> backend/.env
          echo "NODE_ENV=test" >> backend/.env
          echo "CORS_ORIGIN=http://localhost:5173" >> backend/.env
          echo "âœ… .env file created:"
          cat backend/.env | sed 's/\(DATABASE_URL=\).*/\1****/g'

      - name: ðŸ—„ Ensure SQLite Database File Exists
        run: |
          mkdir -p backend/db
          touch backend/db/holos.db

      - name: ðŸ“¦ Run Database Migrations (if applicable)
        working-directory: backend
        run: npm run migrate || echo "No migrations found, skipping."

      - name: ðŸŒ± Seed Database
        working-directory: backend
        run: node db/seed.js

      - name: ðŸš€ Start Backend
        working-directory: backend
        run: |
          export PORT=3000
          nohup npm start > backend.log 2>&1 &
          echo "Waiting for backend to start..."
          for i in {1..30}; do
            if grep -q "Server is running" backend.log; then
              echo "âœ… Backend started successfully"
              break
            fi
            echo "Waiting... $i/30"
            sleep 2
          done
          echo "Backend logs:"
          tail -n 50 backend.log

      - name: ðŸš€ Start Frontend
        working-directory: frontend
        run: |
          npm run build
          nohup npx vite preview --host 0.0.0.0 --port 5173 > frontend.log 2>&1 &
          echo "Waiting for frontend to start..."
          for i in {1..15}; do
            if curl -s http://localhost:5173/ > /dev/null; then
              echo "âœ… Frontend started successfully"
              break
            fi
            echo "Waiting... $i/15"
            sleep 2
          done
          echo "Frontend logs:"
          tail -n 20 frontend.log

      - name: ðŸ§ª Install Playwright
        run: |
          npx playwright install chromium
          npx playwright install-deps chromium

      - name: ðŸ”„ Run Playwright Tests
        run: |
          DEBUG=pw:api npx playwright test --workers=$PLAYWRIGHT_WORKERS --retries=2

      - name: ðŸ“¤ Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 14

      - name: ðŸ“¤ Upload Logs on Failure
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs
          path: |
            backend/backend.log
            frontend/frontend.log
            test-results/
          retention-days: 7
