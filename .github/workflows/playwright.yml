name: Playwright Tests

on:
  push:
    branches: [main, master, e2e-workout]
  pull_request:
    branches: [main, master, e2e-workout]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üîß Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: üì¶ Install Dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci && npm install --save-dev cross-env

      - name: üõ†Ô∏è Configure Backend for CI
        run: |
          if grep -q "start" backend/package.json; then
            node -e "const pkg = require('./backend/package.json'); pkg.scripts.start_ci = 'cross-env HOST=0.0.0.0 PORT=3000 ' + pkg.scripts.start.replace('--watch', ''); require('fs').writeFileSync('./backend/package.json', JSON.stringify(pkg, null, 2));"
          fi

      - name: üåç Start the Backend
        working-directory: backend
        run: |
          echo "Starting backend..."
          if grep -q "start_ci" package.json; then
            nohup npm run start_ci > backend.log 2>&1 &
          else
            HOST=0.0.0.0 PORT=3000 nohup npm start > backend.log 2>&1 &
          fi
          echo "Backend started with PID: $!"
          sleep 5
          echo "Checking backend status:"
          ps aux | grep node
          cat backend.log

      - name: üöÄ Start Frontend
        working-directory: frontend
        run: |
          echo "Starting frontend..."
          npm run build
          nohup npx vite preview --host 0.0.0.0 --port 5173 > frontend.log 2>&1 &
          echo "Frontend started with PID: $!"
          sleep 5
          echo "Checking frontend status:"
          ps aux | grep node
          cat frontend.log

      - name: üîç Debug Server Logs
        run: |
          echo "Current working directory: $(pwd)"
          echo "Backend log:"
          cat backend/backend.log || echo "No backend logs found"
          echo "Frontend log:"
          cat frontend/frontend.log || echo "No frontend logs found"
          echo "Network check:"
          curl -s http://localhost:3000 || echo "Cannot connect to backend"
          curl -s http://localhost:5173 || echo "Cannot connect to frontend"

      - name: ‚è≥ Wait for the App to be Ready
        run: |
          echo "Waiting for Frontend (http://localhost:5173) and Backend (http://localhost:3000)..."
          npx wait-on http://localhost:5173 http://localhost:3000 -t 60000 || echo "Timeout waiting for services"

      - name: üß™ Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: üöÄ Run Playwright Tests
        run: npx playwright test --update-snapshots

      - name: üì§ Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
